//Assignment #: 13
//Student Name: Dhanush Patel
//Class:  COMSC-255
//Section: 8306

public class TestEmployee {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		String name;
		double salary, pctBonus, bonus, travelExpense;
		int optionsCount;
		 
		for (int i=0; i < employee.length; i++)
		{
		//get name and salary
		//To access target object methods that are defined in class Employee, we don’t need type casting.
		name = employee[i].getName();
		salary = employee[i].getSalary();
		 
		//call computeBonus using polymorphic call
		//Since computeBonus is declared in Employee class, we don’t need type casting.
		bonus = employee [i].computeBonus();
		 
		//use name, salary, bonus, pctBonus returned above towards building the summary report.
		String out, outW="", outM="", outE="";
		 
		//To access target object methods that are not defined in class Employee, we use down casting.
		//Downcasting (Widening) should be done within an if statement using instanceof
		//Since getPctBonus method is not present in class Employee, it is accessed via down casting.
		//Similarly getTravelExpense, and getOptionsCount are accessed via downcasting.
		//The instanceof clause is used below to ensure a safe down casting (widening).
		if (employee[i] instanceof Worker){
		pctBonus = ( (Worker) employee[i] ).getPctBonus();
		//accumulate Worker output in outW
		outW = outW + "Name:" + name + "\n";
		//add other values in outW
		}
		else if (employee[i] instanceof Manager) {
		pctBonus = ( (Manager) employee[I] ).getPctBonus();
		travelExpense = ( (Manager) employee[I] ).getTravelExpense();
		//accumulate Manager output in outM
		outM = outM + "Name:" + name + "\n";
		//add other values in outM
		 
		        }
		else if (employee[i] instanceof Executive) {
		pctBonus = ( (Executive) employee[I] ).getPctBonus();
		travelExpense = ( (Executive) employee[I] ).getTravelExpense();
		optionsCount = ( (Executive) employee[I] ).getOptionsCount();
		//accumulate Executive output in outE
		outE = outE + "Name:" + name + "\n";
		//add other values in outE
		 
		        }
		}
		//After getting out of the loop
		out = outW + outM + outE:
		//display out
		JOPtionPane.showMessageDialog(null, out);
	}
}
